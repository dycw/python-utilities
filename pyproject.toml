#

# build-system
[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

# project
[project]
authors = [{name = "Derek Wan", email = "d.wan@icloud.com"}]
dependencies = ["typing-extensions >= 4.11.0, < 4.12"]
dynamic = ["version"]
name = "dycw-utilities"
readme = "README.md"
requires-python = ">= 3.10"

[project.optional-dependencies]
cacher = ["atomicwrites >= 1.4.1, < 1.5", "cachetools >= 5.3.3, < 5.4"]
dev = [
  "altair >= 5.3.0, < 5.4",
  "ast-comments >= 1.2.2, < 1.3",
  "atomicwrites >= 1.4.1, < 1.5",
  "atools >= 0.14.2, < 0.15",
  "beartype >= 0.18.5, < 0.19",
  "beautifulsoup4 >= 4.12.3, < 4.13",
  "bidict >= 0.23.1, < 0.24",
  "bottleneck >= 1.3.8, < 1.4",
  "cachetools >= 5.3.3, < 5.4",
  "click >= 8.1.7, < 8.2",
  "cryptography >= 42.0.7, < 42.1",
  "cvxpy >= 1.4.3, < 1.5",
  "fastapi-slim >= 0.111.0, < 0.112",
  "fpdf2 >= 2.7.8, < 2.8",
  "frozendict >= 2.4.4, < 2.5",
  "hatch >= 1.10.0, < 1.11",
  "holoviews >= 1.18.3, < 1.19",
  "hypothesis >= 6.100.5, < 6.101",
  "loguru >= 0.7.2, < 0.8",
  "luigi >= 3.5.0, < 3.6",
  "mdutils >= 1.6.0, < 1.7",
  "memory-profiler >= 0.61.0, < 0.62",
  "more-itertools >= 10.2.0, < 10.3",
  "numbagg >= 0.8.1, < 0.9",
  "numpy >= 1.26.4, < 1.27",
  "optuna >= 3.6.1, < 3.7",
  "pandas >= 1.4.2, < 1.5",
  "pathvalidate",
  "polars-lts-cpu",  # for CI
  "pqdm",
  "psutil",
  "pydantic",
  "pyhumps >= 3.8.0, < 3.9",
  "pyinstrument",
  "pypiserver[passlib] >= 2.1.1, < 2.2",
  "pytest",
  "pytest-check",
  "scipy",
  "selenium",
  "semver",
  "sqlalchemy",
  "streamlit",
  "typed-settings >= 24.2.0, < 24.3",
  "xarray >= 2024.3.0, < 2024.4",
  "xlrd >= 2.0.1, < 2.1",
  "zarr",
  # test
  "coverage-conditional-plugin",
  "exceptiongroup",
  "freezegun >= 1.5.0, < 1.6",
  "psycopg2-binary",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-instafail",
  "pytest-only",
  "pytest-randomly",
  "pytest-rerunfailures",
  "pytest-xdist",
  # CI
  "win32_setctime",  # https://github.com/Delgan/loguru/issues/147
]
scripts-clean-dir = ["click >= 8.1.7, < 8.2", "loguru >= 0.7.2, < 0.8", "typed-settings >= 24.2.0, < 24.3"]
scripts-csv-to-markdown = ["click >= 8.1.7, < 8.2", "loguru >= 0.7.2, < 0.8", "mdutils >= 1.6.0, < 1.7", "typed-settings >= 24.2.0, < 24.3"]
scripts-generate-snippets = [
  "ast-comments >= 1.2.2, < 1.3",
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "pyhumps >= 3.8.0, < 3.9",
  "typed-settings >= 24.2.0, < 24.3",
]
scripts-luigi-server = ["click >= 8.1.7, < 8.2", "loguru >= 0.7.2, < 0.8", "luigi >= 3.5.0, < 3.6", "typed-settings >= 24.2.0, < 24.3"]
scripts-monitor-memory = ["click >= 8.1.7, < 8.2", "loguru >= 0.7.2, < 0.8", "psutil", "typed-settings >= 24.2.0, < 24.3"]
scripts-pypi-server = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "pypiserver[passlib] >= 2.1.1, < 2.2",
  "typed-settings >= 24.2.0, < 24.3",
]
test = [
  "exceptiongroup",
  "hypothesis >= 6.100.5, < 6.101",
  "pytest",
  "pytest-randomly",
  "pytest-rerunfailures",
  "pytest-xdist",
]
zzz-test-ast = []
zzz-test-atomicwrites = ["atomicwrites >= 1.4.1, < 1.5"]
zzz-test-atools = ["atools >= 0.14.2, < 0.15"]
zzz-test-beartype = ["beartype >= 0.18.5, < 0.19"]
zzz-test-bs4 = ["beautifulsoup4 >= 4.12.3, < 4.13", "polars"]
zzz-test-cacher = ["atomicwrites >= 1.4.1, < 1.5", "cachetools >= 5.3.3, < 5.4"]
zzz-test-cachetools = ["cachetools >= 5.3.3, < 5.4"]
zzz-test-click = ["click >= 8.1.7, < 8.2", "sqlalchemy"]
zzz-test-cryptography = ["cryptography >= 42.0.7, < 42.1"]
zzz-test-cvxpy = ["cvxpy >= 1.4.3, < 1.5", "pandas >= 1.4.2, < 1.5"]
zzz-test-dataclasses = []
zzz-test-datetime = []
zzz-test-defaults = [
  "coverage-conditional-plugin",
  "exceptiongroup",
  "hypothesis >= 6.100.5, < 6.101",
  "pytest",
  "pytest-cov",
  "pytest-randomly",
  "pytest-rerunfailures",
]
zzz-test-email = []
zzz-test-enum = []
zzz-test-errors = []
zzz-test-fastapi = ["fastapi-slim >= 0.111.0, < 0.112"]
zzz-test-fpdf2 = ["fpdf2 >= 2.7.8, < 2.8", "holoviews >= 1.18.3, < 1.19"]
zzz-test-functions = []
zzz-test-functools = []
zzz-test-getpass = []
zzz-test-git = []
zzz-test-hashlib = []
zzz-test-hatch = ["hatch >= 1.10.0, < 1.11"]
zzz-test-holoviews = ["holoviews >= 1.18.3, < 1.19", "numbagg >= 0.8.1, < 0.9", "xarray >= 2024.3.0, < 2024.4"]
zzz-test-humps = ["bidict >= 0.23.1, < 0.24", "pyhumps >= 3.8.0, < 3.9"]
zzz-test-ipython = ["ipython"]
zzz-test-iterables = []
zzz-test-json = ["sqlalchemy"]
zzz-test-jupyter = ["jupyterlab", "pandas >= 1.4.2, < 1.5", "polars"]
zzz-test-locale = []
zzz-test-logging = []
zzz-test-loguru = ["loguru >= 0.7.2, < 0.8"]
zzz-test-luigi = ["freezegun >= 1.5.0, < 1.6", "luigi >= 3.5.0, < 3.6", "semver", "sqlalchemy"]
zzz-test-math = []
zzz-test-memory-profiler = ["memory-profiler >= 0.61.0, < 0.62"]
zzz-test-modules = [
  "atomicwrites >= 1.4.1, < 1.5",
  "ast-comments >= 1.2.2, < 1.3",
  "beartype >= 0.18.5, < 0.19",
  "beautifulsoup4 >= 4.12.3, < 4.13",
  "cachetools >= 5.3.3, < 5.4",
  "click >= 8.1.7, < 8.2",
  "cryptography >= 42.0.7, < 42.1",
  "cvxpy >= 1.4.3, < 1.5",
  "fastapi-slim >= 0.111.0, < 0.112",
  "fpdf2 >= 2.7.8, < 2.8",
  "hatch >= 1.10.0, < 1.11",
  "holoviews >= 1.18.3, < 1.19",
  "loguru >= 0.7.2, < 0.8",
  "luigi >= 3.5.0, < 3.6",
  "memory-profiler >= 0.61.0, < 0.62",
  "mdutils >= 1.6.0, < 1.7",
  "more-itertools >= 10.2.0, < 10.3",
  "numpy >= 1.26.4, < 1.27",
  "pathvalidate",
  "polars",
  "pqdm",
  "pydantic",
  "pyhumps >= 3.8.0, < 3.9",
  "pyinstrument",
  "pytest-check",
  "scipy",
  "semver",
  "sqlalchemy",
  "streamlit",
  "typed-settings >= 24.2.0, < 24.3",
  "xarray >= 2024.3.0, < 2024.4",
  "xlrd >= 2.0.1, < 2.1",
  "zarr",
]
zzz-test-more-itertools = ["more-itertools >= 10.2.0, < 10.3"]
zzz-test-numpy = ["bottleneck >= 1.3.8, < 1.4", "numbagg >= 0.8.1, < 0.9", "pandas >= 1.4.2, < 1.5"]
zzz-test-optuna = ["optuna >= 3.6.1, < 3.7"]
zzz-test-os = []
zzz-test-pandas = ["pandas >= 1.4.2, < 1.5"]
zzz-test-pathlib = ["pathvalidate"]
zzz-test-pathvalidate = ["pathvalidate"]
zzz-test-pickle = ["atomicwrites >= 1.4.1, < 1.5"]
zzz-test-platform = []
zzz-test-polars = ["polars"]
zzz-test-pqdm = ["pqdm"]
zzz-test-pydantic = ["atomicwrites >= 1.4.1, < 1.5", "pydantic"]
zzz-test-pyinstrument = ["atomicwrites >= 1.4.1, < 1.5", "pyinstrument"]
zzz-test-pytest = ["atomicwrites >= 1.4.1, < 1.5", "pytest-asyncio"]
zzz-test-pytest-check = ["pytest-check"]
zzz-test-random = []
zzz-test-re = []
zzz-test-scipy = ["scipy"]
zzz-test-scripts-clean-dir = ["click >= 8.1.7, < 8.2", "freezegun >= 1.5.0, < 1.6", "loguru >= 0.7.2, < 0.8", "typed-settings >= 24.2.0, < 24.3"]
zzz-test-scripts-csv-to-markdown = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "mdutils >= 1.6.0, < 1.7",
  "typed-settings >= 24.2.0, < 24.3",
]
zzz-test-scripts-generate-snippets = [
  "ast-comments",
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "pyhumps >= 3.8.0, < 3.9",
  "typed-settings >= 24.2.0, < 24.3",
]
zzz-test-scripts-luigi-server = ["click >= 8.1.7, < 8.2", "loguru >= 0.7.2, < 0.8", "luigi >= 3.5.0, < 3.6", "typed-settings >= 24.2.0, < 24.3"]
zzz-test-scripts-monitor-memory = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "psutil",
  "typed-settings >= 24.2.0, < 24.3",
]
zzz-test-scripts-pypi-server = [
  "click >= 8.1.7, < 8.2",
  "loguru >= 0.7.2, < 0.8",
  "pypiserver[passlib] >= 2.1.1, < 2.2",
  "typed-settings >= 24.2.0, < 24.3",
]
zzz-test-semver = ["semver"]
zzz-test-sentinel = []
zzz-test-socket = []
zzz-test-sqlalchemy = ["bidict >= 0.23.1, < 0.24", "psycopg2-binary", "pyhumps >= 3.8.0, < 3.9", "sqlalchemy"]
zzz-test-sqlalchemy-polars = ["polars", "pyhumps >= 3.8.0, < 3.9", "sqlalchemy"]
zzz-test-subprocess = []
zzz-test-sys = []
zzz-test-tempfile = []
zzz-test-text = []
zzz-test-timer = []
zzz-test-typed-settings = ["click >= 8.1.7, < 8.2", "sqlalchemy", "typed-settings >= 24.2.0, < 24.3"]
zzz-test-xarray = ["bottleneck >= 1.3.8, < 1.4", "numbagg >= 0.8.1, < 0.9", "xarray >= 2024.3.0, < 2024.4"]
zzz-test-xlrd = ["xlrd >= 2.0.1, < 2.1"]
zzz-test-zarr = ["atomicwrites >= 1.4.1, < 1.5", "zarr"]

[project.scripts]
clean-dir = "utilities.scripts.clean_dir:main"
csv-to-markdown = "utilities.scripts.csv_to_markdown:main"
generate-snippets = "utilities.scripts.generate_snippets:main"
monitor-memory = "utilities.scripts.monitor_memory:main"
start-luigi-server = "utilities.scripts.luigi.server:main"
start-pypi-server = "utilities.scripts.pypi_server:main"

# coverage
[tool.coverage]

[tool.coverage.coverage_conditional_plugin.rules]
os-eq-linux = 'sys_platform == "linux"'
os-eq-macos = 'sys_platform == "darwin"'
os-eq-windows = 'sys_platform == "windows"'
os-ne-linux = 'sys_platform != "linux"'
os-ne-macos = 'sys_platform != "darwin"'
os-ne-windows = 'sys_platform != "windows"'
version-ge-311 = "sys_version_info >= (3, 11)"

[tool.coverage.html]
directory = ".coverage/html"

[tool.coverage.report]
exclude_also = [
  "@overload",
  "assert_never",
  "case _ as never:",
  "if TYPE_CHECKING:",
]
fail_under = 100.0
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
data_file = ".coverage/data"
omit = ["src/utilities/clean_dir/__main__.py", "src/utilities/streamlit.py"]
parallel = true
plugins = ["coverage_conditional_plugin"]

# hatch
[tool.hatch]

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
packages = ["src/utilities"]

[tool.hatch.version]
path = "src/utilities/__init__.py"

# nitpick
[tool.nitpick]
style = [
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/3.10.toml",
  "https://raw.githubusercontent.com/dycw/nitpick/master/styles/common.toml",
]

# pyright
[tool.pyright]
executionEnvironments = [{root = "src"}]
include = ["src"]
pythonVersion = "3.10"
reportImplicitOverride = "error"
reportImportCycles = "error"
reportMissingSuperCall = "error"
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPrivateImportUsage = false
reportPrivateUsage = false
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryTypeIgnoreComment = "error"
reportUntypedBaseClass = false
reportUnusedCallResult = "error"
typeCheckingMode = "strict"

# pytest
[tool.pytest]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "-vv",
  "--color=auto",
  "--cov=utilities",
  "--cov-config=pyproject.toml",
  "--cov-report=html",
  "--strict-markers",
]
filterwarnings = [
  "error",
  "ignore:Implicitly cleaning up <TemporaryDirectory '.*'>:ResourceWarning",
]
minversion = "8.0"
testpaths = ["src/tests"]
xfail_strict = true

# ruff
[tool.ruff]
extend-exclude = ["**/*.ipynb"]
src = ["src"]
target-version = "py310"
unsafe-fixes = true

[tool.ruff.lint]
ignore = [
  "ANN101",  # missing-type-self
  "ANN102",  # missing-type-cls
  "ANN401",  # dynamically-typed-expression
  "D",  # pydocstyle
  "E501",  # line-too-long
  "F403",  # undefined-local-with-import-star
  "F405",  # undefined-local-with-import-star-usage
  "PLE1142",  # await-outside-async
  "PLR0911",  # too-many-return-statements
  "PLR0913",  # too-many-arguments
  "PLR0915",  # too-many-statements
  "PLR2004",  # magic-value-comparison
  "PT013",  # pytest-incorrect-pytest-import
  "S101",  # assert-used
  "S603",  # subprocess-without-shell-equals-true
  "S607",  # start-process-with-partial-path
  # formatter
  "W191",  # tab-indentation
  "E111",  # indentation-with-invalid-multiple
  "E114",  # indentation-with-invalid-multiple-comment
  "E117",  # over-indented
  "D206",  # indent-with-spaces
  "D300",  # triple-single-quotes
  "Q000",  # bad-quotes-inline-string
  "Q001",  # bad-quotes-multiline-string
  "Q002",  # bad-quotes-docstring
  "Q003",  # avoidable-escaped-quote
  "COM812",  # missing-trailing-comma
  "COM819",  # prohibited-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenation
  "ISC002",  # multi-line-implicit-string-concatenation
]
ignore-init-module-imports = false
select = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]
"src/tests/**/*.py" = [
  "PD901",  # pandas-df-variable-name
  "S101",  # assert-used
]
"src/tests/test_typed_settings.py" = ["I002"]  # missing-required-import

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["utilities.typed_settings.click_field"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
